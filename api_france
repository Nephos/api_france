#!/usr/bin/env ruby
#encoding: utf-8

require 'pry' # the debugging library.
require 'rack' # server
require 'active_record' # models and migration
require 'autoreload' # reload the server code during the running

# include the libraries in libs/
libs = `ls lib/*`.to_s.split("\n")
libs.each{|lib| require_relative lib}

autoreload(:interval=>1, :verbose=>true) do
  begin
    Dir[File.expand_path "src/**/*.rb"].each{|f| require_relative(f)}
    ApiFrance::Configuration.load!
  rescue => e
    puts "Error during loading the files..."
    puts e.message, e.backtrace.join("\n")
  end
end

def self.parse_arg(name, argc=1)
  i = ARGV.index name
  return nil if i.nil?
  return ARGV[i+1] if argc == 1
  return ARGV[i+1..i+i]
end

SERVER = lambda { |env| return ApiFrance.api(env) }

if $0 == __FILE__
  port = (parse_arg('port') || 8080).to_i
  # http://www.rubydoc.info/gems/rack/Rack/Server#initialize-instance_method
  STREAM = Rack::Server.start :app => SERVER, :Port => port
end
